//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SRegulV2.XMLPhone {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="XmlPhoneSoapBinding", Namespace="http://xmlapi.alcatel.com/phone")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemMod))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(CallLogElt))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(Call))]
    public partial class XmlPhoneService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback subscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback getPhoneCapabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback unsubscribeOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNomadicStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback nomadLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback nomadLogoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTelephonyCapabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLineStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback makeCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendAssociateDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback takeCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback takeCurrentCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback deflectCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback deflectCurrentCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback holdCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback holdCurrentCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback clearCurrentCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback conferenceCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback conferenceCurrentCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelConferenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback transferCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback transferCurrentCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendDTMFOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentCallInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCallStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCallRecordCapabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback startRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback stopRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback pauseRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback continueRecordOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRecordStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCallLogCapabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCallLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNbUnansweredCallOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyCallLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteCallLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteAllCallLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRepertoryCapabilitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getRepertoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllRepertoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback createRepertoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyRepertoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteRepertoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveRepertoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback getFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback createFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback modifyFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback moveFolderOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public XmlPhoneService() {
            this.Url = global::SRegulV2.Properties.Settings.Default.SRegulV2_XMLPhone_XmlPhoneService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event subscribeCompletedEventHandler subscribeCompleted;
        
        /// <remarks/>
        public event loginSupervisorCompletedEventHandler loginSupervisorCompleted;
        
        /// <remarks/>
        public event getPhoneCapabilitiesCompletedEventHandler getPhoneCapabilitiesCompleted;
        
        /// <remarks/>
        public event unsubscribeCompletedEventHandler unsubscribeCompleted;
        
        /// <remarks/>
        public event getNomadicStateCompletedEventHandler getNomadicStateCompleted;
        
        /// <remarks/>
        public event nomadLoginCompletedEventHandler nomadLoginCompleted;
        
        /// <remarks/>
        public event nomadLogoutCompletedEventHandler nomadLogoutCompleted;
        
        /// <remarks/>
        public event getTelephonyCapabilitiesCompletedEventHandler getTelephonyCapabilitiesCompleted;
        
        /// <remarks/>
        public event getLineStateCompletedEventHandler getLineStateCompleted;
        
        /// <remarks/>
        public event makeCallCompletedEventHandler makeCallCompleted;
        
        /// <remarks/>
        public event sendAssociateDataCompletedEventHandler sendAssociateDataCompleted;
        
        /// <remarks/>
        public event takeCallCompletedEventHandler takeCallCompleted;
        
        /// <remarks/>
        public event takeCurrentCallCompletedEventHandler takeCurrentCallCompleted;
        
        /// <remarks/>
        public event deflectCallCompletedEventHandler deflectCallCompleted;
        
        /// <remarks/>
        public event deflectCurrentCallCompletedEventHandler deflectCurrentCallCompleted;
        
        /// <remarks/>
        public event holdCallCompletedEventHandler holdCallCompleted;
        
        /// <remarks/>
        public event holdCurrentCallCompletedEventHandler holdCurrentCallCompleted;
        
        /// <remarks/>
        public event clearCallCompletedEventHandler clearCallCompleted;
        
        /// <remarks/>
        public event clearCurrentCallCompletedEventHandler clearCurrentCallCompleted;
        
        /// <remarks/>
        public event conferenceCallCompletedEventHandler conferenceCallCompleted;
        
        /// <remarks/>
        public event conferenceCurrentCallCompletedEventHandler conferenceCurrentCallCompleted;
        
        /// <remarks/>
        public event cancelConferenceCompletedEventHandler cancelConferenceCompleted;
        
        /// <remarks/>
        public event transferCallCompletedEventHandler transferCallCompleted;
        
        /// <remarks/>
        public event transferCurrentCallCompletedEventHandler transferCurrentCallCompleted;
        
        /// <remarks/>
        public event sendDTMFCompletedEventHandler sendDTMFCompleted;
        
        /// <remarks/>
        public event getCurrentCallInfoCompletedEventHandler getCurrentCallInfoCompleted;
        
        /// <remarks/>
        public event getCallStateCompletedEventHandler getCallStateCompleted;
        
        /// <remarks/>
        public event getCallRecordCapabilitiesCompletedEventHandler getCallRecordCapabilitiesCompleted;
        
        /// <remarks/>
        public event startRecordCompletedEventHandler startRecordCompleted;
        
        /// <remarks/>
        public event stopRecordCompletedEventHandler stopRecordCompleted;
        
        /// <remarks/>
        public event pauseRecordCompletedEventHandler pauseRecordCompleted;
        
        /// <remarks/>
        public event continueRecordCompletedEventHandler continueRecordCompleted;
        
        /// <remarks/>
        public event getRecordStateCompletedEventHandler getRecordStateCompleted;
        
        /// <remarks/>
        public event getCallLogCapabilitiesCompletedEventHandler getCallLogCapabilitiesCompleted;
        
        /// <remarks/>
        public event getCallLogCompletedEventHandler getCallLogCompleted;
        
        /// <remarks/>
        public event getNbUnansweredCallCompletedEventHandler getNbUnansweredCallCompleted;
        
        /// <remarks/>
        public event modifyCallLogCompletedEventHandler modifyCallLogCompleted;
        
        /// <remarks/>
        public event deleteCallLogCompletedEventHandler deleteCallLogCompleted;
        
        /// <remarks/>
        public event deleteAllCallLogCompletedEventHandler deleteAllCallLogCompleted;
        
        /// <remarks/>
        public event getRepertoryCapabilitiesCompletedEventHandler getRepertoryCapabilitiesCompleted;
        
        /// <remarks/>
        public event getRepertoryCompletedEventHandler getRepertoryCompleted;
        
        /// <remarks/>
        public event getAllRepertoryCompletedEventHandler getAllRepertoryCompleted;
        
        /// <remarks/>
        public event createRepertoryCompletedEventHandler createRepertoryCompleted;
        
        /// <remarks/>
        public event modifyRepertoryCompletedEventHandler modifyRepertoryCompleted;
        
        /// <remarks/>
        public event deleteRepertoryCompletedEventHandler deleteRepertoryCompleted;
        
        /// <remarks/>
        public event moveRepertoryCompletedEventHandler moveRepertoryCompleted;
        
        /// <remarks/>
        public event getFolderCompletedEventHandler getFolderCompleted;
        
        /// <remarks/>
        public event createFolderCompletedEventHandler createFolderCompleted;
        
        /// <remarks/>
        public event modifyFolderCompletedEventHandler modifyFolderCompleted;
        
        /// <remarks/>
        public event deleteFolderCompletedEventHandler deleteFolderCompleted;
        
        /// <remarks/>
        public event moveFolderCompletedEventHandler moveFolderCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("login", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public AlcLogonResult login(string pFwSessionId, string notificationUrl, AlcEventType[] undesirableEventTypes) {
            object[] results = this.Invoke("login", new object[] {
                        pFwSessionId,
                        notificationUrl,
                        undesirableEventTypes});
            return ((AlcLogonResult)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string pFwSessionId, string notificationUrl, AlcEventType[] undesirableEventTypes) {
            this.loginAsync(pFwSessionId, notificationUrl, undesirableEventTypes, null);
        }
        
        /// <remarks/>
        public void loginAsync(string pFwSessionId, string notificationUrl, AlcEventType[] undesirableEventTypes, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        pFwSessionId,
                        notificationUrl,
                        undesirableEventTypes}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("logout", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("logoutReturn")]
        public AlcStatus logout(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("logout", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void logoutAsync(string pFwSessionId, string sessionId) {
            this.logoutAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        pFwSessionId,
                        sessionId}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("subscribe", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("subscribeReturn")]
        public AlcStatus subscribe(string pFwSessionId, string sessionId, string notificationUrl, AlcEventType[] undesirableEventTypes) {
            object[] results = this.Invoke("subscribe", new object[] {
                        pFwSessionId,
                        sessionId,
                        notificationUrl,
                        undesirableEventTypes});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void subscribeAsync(string pFwSessionId, string sessionId, string notificationUrl, AlcEventType[] undesirableEventTypes) {
            this.subscribeAsync(pFwSessionId, sessionId, notificationUrl, undesirableEventTypes, null);
        }
        
        /// <remarks/>
        public void subscribeAsync(string pFwSessionId, string sessionId, string notificationUrl, AlcEventType[] undesirableEventTypes, object userState) {
            if ((this.subscribeOperationCompleted == null)) {
                this.subscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsubscribeOperationCompleted);
            }
            this.InvokeAsync("subscribe", new object[] {
                        pFwSessionId,
                        sessionId,
                        notificationUrl,
                        undesirableEventTypes}, this.subscribeOperationCompleted, userState);
        }
        
        private void OnsubscribeOperationCompleted(object arg) {
            if ((this.subscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.subscribeCompleted(this, new subscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("loginSupervisor", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginSupervisorReturn")]
        public AlcLogonResult loginSupervisor(string pFwSessionId, string supervisedAccountId, AlcUserIdType supervisedAccountIdType, string notificationUrl, AlcEventType[] undesirableEventTypes) {
            object[] results = this.Invoke("loginSupervisor", new object[] {
                        pFwSessionId,
                        supervisedAccountId,
                        supervisedAccountIdType,
                        notificationUrl,
                        undesirableEventTypes});
            return ((AlcLogonResult)(results[0]));
        }
        
        /// <remarks/>
        public void loginSupervisorAsync(string pFwSessionId, string supervisedAccountId, AlcUserIdType supervisedAccountIdType, string notificationUrl, AlcEventType[] undesirableEventTypes) {
            this.loginSupervisorAsync(pFwSessionId, supervisedAccountId, supervisedAccountIdType, notificationUrl, undesirableEventTypes, null);
        }
        
        /// <remarks/>
        public void loginSupervisorAsync(string pFwSessionId, string supervisedAccountId, AlcUserIdType supervisedAccountIdType, string notificationUrl, AlcEventType[] undesirableEventTypes, object userState) {
            if ((this.loginSupervisorOperationCompleted == null)) {
                this.loginSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginSupervisorOperationCompleted);
            }
            this.InvokeAsync("loginSupervisor", new object[] {
                        pFwSessionId,
                        supervisedAccountId,
                        supervisedAccountIdType,
                        notificationUrl,
                        undesirableEventTypes}, this.loginSupervisorOperationCompleted, userState);
        }
        
        private void OnloginSupervisorOperationCompleted(object arg) {
            if ((this.loginSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginSupervisorCompleted(this, new loginSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getPhoneCapabilities", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getPhoneCapabilitiesReturn")]
        public AlcPhoneCapabilities getPhoneCapabilities(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getPhoneCapabilities", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcPhoneCapabilities)(results[0]));
        }
        
        /// <remarks/>
        public void getPhoneCapabilitiesAsync(string pFwSessionId, string sessionId) {
            this.getPhoneCapabilitiesAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getPhoneCapabilitiesAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getPhoneCapabilitiesOperationCompleted == null)) {
                this.getPhoneCapabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetPhoneCapabilitiesOperationCompleted);
            }
            this.InvokeAsync("getPhoneCapabilities", new object[] {
                        pFwSessionId,
                        sessionId}, this.getPhoneCapabilitiesOperationCompleted, userState);
        }
        
        private void OngetPhoneCapabilitiesOperationCompleted(object arg) {
            if ((this.getPhoneCapabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getPhoneCapabilitiesCompleted(this, new getPhoneCapabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("unsubscribe", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("unsubscribeReturn")]
        public AlcStatus unsubscribe(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("unsubscribe", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void unsubscribeAsync(string pFwSessionId, string sessionId) {
            this.unsubscribeAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void unsubscribeAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.unsubscribeOperationCompleted == null)) {
                this.unsubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnunsubscribeOperationCompleted);
            }
            this.InvokeAsync("unsubscribe", new object[] {
                        pFwSessionId,
                        sessionId}, this.unsubscribeOperationCompleted, userState);
        }
        
        private void OnunsubscribeOperationCompleted(object arg) {
            if ((this.unsubscribeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.unsubscribeCompleted(this, new unsubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getNomadicState", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getNomadicStateReturn")]
        public NomadicStateResult getNomadicState(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getNomadicState", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((NomadicStateResult)(results[0]));
        }
        
        /// <remarks/>
        public void getNomadicStateAsync(string pFwSessionId, string sessionId) {
            this.getNomadicStateAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getNomadicStateAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getNomadicStateOperationCompleted == null)) {
                this.getNomadicStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNomadicStateOperationCompleted);
            }
            this.InvokeAsync("getNomadicState", new object[] {
                        pFwSessionId,
                        sessionId}, this.getNomadicStateOperationCompleted, userState);
        }
        
        private void OngetNomadicStateOperationCompleted(object arg) {
            if ((this.getNomadicStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNomadicStateCompleted(this, new getNomadicStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("nomadLogin", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("nomadLoginReturn")]
        public AlcStatus nomadLogin(string pFwSessionId, string sessionId, string homeNumber) {
            object[] results = this.Invoke("nomadLogin", new object[] {
                        pFwSessionId,
                        sessionId,
                        homeNumber});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void nomadLoginAsync(string pFwSessionId, string sessionId, string homeNumber) {
            this.nomadLoginAsync(pFwSessionId, sessionId, homeNumber, null);
        }
        
        /// <remarks/>
        public void nomadLoginAsync(string pFwSessionId, string sessionId, string homeNumber, object userState) {
            if ((this.nomadLoginOperationCompleted == null)) {
                this.nomadLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnomadLoginOperationCompleted);
            }
            this.InvokeAsync("nomadLogin", new object[] {
                        pFwSessionId,
                        sessionId,
                        homeNumber}, this.nomadLoginOperationCompleted, userState);
        }
        
        private void OnnomadLoginOperationCompleted(object arg) {
            if ((this.nomadLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nomadLoginCompleted(this, new nomadLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("nomadLogout", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("nomadLogoutReturn")]
        public AlcStatus nomadLogout(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("nomadLogout", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void nomadLogoutAsync(string pFwSessionId, string sessionId) {
            this.nomadLogoutAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void nomadLogoutAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.nomadLogoutOperationCompleted == null)) {
                this.nomadLogoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnnomadLogoutOperationCompleted);
            }
            this.InvokeAsync("nomadLogout", new object[] {
                        pFwSessionId,
                        sessionId}, this.nomadLogoutOperationCompleted, userState);
        }
        
        private void OnnomadLogoutOperationCompleted(object arg) {
            if ((this.nomadLogoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.nomadLogoutCompleted(this, new nomadLogoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getTelephonyCapabilities", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTelephonyCapabilitiesReturn")]
        public AlcTelephonyCapabilities getTelephonyCapabilities(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getTelephonyCapabilities", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcTelephonyCapabilities)(results[0]));
        }
        
        /// <remarks/>
        public void getTelephonyCapabilitiesAsync(string pFwSessionId, string sessionId) {
            this.getTelephonyCapabilitiesAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getTelephonyCapabilitiesAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getTelephonyCapabilitiesOperationCompleted == null)) {
                this.getTelephonyCapabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTelephonyCapabilitiesOperationCompleted);
            }
            this.InvokeAsync("getTelephonyCapabilities", new object[] {
                        pFwSessionId,
                        sessionId}, this.getTelephonyCapabilitiesOperationCompleted, userState);
        }
        
        private void OngetTelephonyCapabilitiesOperationCompleted(object arg) {
            if ((this.getTelephonyCapabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTelephonyCapabilitiesCompleted(this, new getTelephonyCapabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getLineState", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getLineStateReturn")]
        public LineStateResult getLineState(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getLineState", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((LineStateResult)(results[0]));
        }
        
        /// <remarks/>
        public void getLineStateAsync(string pFwSessionId, string sessionId) {
            this.getLineStateAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getLineStateAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getLineStateOperationCompleted == null)) {
                this.getLineStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLineStateOperationCompleted);
            }
            this.InvokeAsync("getLineState", new object[] {
                        pFwSessionId,
                        sessionId}, this.getLineStateOperationCompleted, userState);
        }
        
        private void OngetLineStateOperationCompleted(object arg) {
            if ((this.getLineStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLineStateCompleted(this, new getLineStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("makeCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("makeCallReturn")]
        public AlcStatus makeCall(string pFwSessionId, MakeCallInvoke invoke) {
            object[] results = this.Invoke("makeCall", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void makeCallAsync(string pFwSessionId, MakeCallInvoke invoke) {
            this.makeCallAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void makeCallAsync(string pFwSessionId, MakeCallInvoke invoke, object userState) {
            if ((this.makeCallOperationCompleted == null)) {
                this.makeCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmakeCallOperationCompleted);
            }
            this.InvokeAsync("makeCall", new object[] {
                        pFwSessionId,
                        invoke}, this.makeCallOperationCompleted, userState);
        }
        
        private void OnmakeCallOperationCompleted(object arg) {
            if ((this.makeCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.makeCallCompleted(this, new makeCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("sendAssociateData", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendAssociateDataReturn")]
        public AlcStatus sendAssociateData(string pFwSessionId, SendAssociateDataInvoke invoke) {
            object[] results = this.Invoke("sendAssociateData", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void sendAssociateDataAsync(string pFwSessionId, SendAssociateDataInvoke invoke) {
            this.sendAssociateDataAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void sendAssociateDataAsync(string pFwSessionId, SendAssociateDataInvoke invoke, object userState) {
            if ((this.sendAssociateDataOperationCompleted == null)) {
                this.sendAssociateDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendAssociateDataOperationCompleted);
            }
            this.InvokeAsync("sendAssociateData", new object[] {
                        pFwSessionId,
                        invoke}, this.sendAssociateDataOperationCompleted, userState);
        }
        
        private void OnsendAssociateDataOperationCompleted(object arg) {
            if ((this.sendAssociateDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendAssociateDataCompleted(this, new sendAssociateDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("takeCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("takeCallReturn")]
        public AlcStatus takeCall(string pFwSessionId, TakeCallInvoke invoke) {
            object[] results = this.Invoke("takeCall", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void takeCallAsync(string pFwSessionId, TakeCallInvoke invoke) {
            this.takeCallAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void takeCallAsync(string pFwSessionId, TakeCallInvoke invoke, object userState) {
            if ((this.takeCallOperationCompleted == null)) {
                this.takeCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OntakeCallOperationCompleted);
            }
            this.InvokeAsync("takeCall", new object[] {
                        pFwSessionId,
                        invoke}, this.takeCallOperationCompleted, userState);
        }
        
        private void OntakeCallOperationCompleted(object arg) {
            if ((this.takeCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.takeCallCompleted(this, new takeCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("takeCurrentCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("takeCurrentCallReturn")]
        public AlcStatus takeCurrentCall(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("takeCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void takeCurrentCallAsync(string pFwSessionId, string sessionId) {
            this.takeCurrentCallAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void takeCurrentCallAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.takeCurrentCallOperationCompleted == null)) {
                this.takeCurrentCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OntakeCurrentCallOperationCompleted);
            }
            this.InvokeAsync("takeCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId}, this.takeCurrentCallOperationCompleted, userState);
        }
        
        private void OntakeCurrentCallOperationCompleted(object arg) {
            if ((this.takeCurrentCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.takeCurrentCallCompleted(this, new takeCurrentCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deflectCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("deflectCallReturn")]
        public AlcStatus deflectCall(string pFwSessionId, DeflectCallInvoke invoke) {
            object[] results = this.Invoke("deflectCall", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void deflectCallAsync(string pFwSessionId, DeflectCallInvoke invoke) {
            this.deflectCallAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void deflectCallAsync(string pFwSessionId, DeflectCallInvoke invoke, object userState) {
            if ((this.deflectCallOperationCompleted == null)) {
                this.deflectCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeflectCallOperationCompleted);
            }
            this.InvokeAsync("deflectCall", new object[] {
                        pFwSessionId,
                        invoke}, this.deflectCallOperationCompleted, userState);
        }
        
        private void OndeflectCallOperationCompleted(object arg) {
            if ((this.deflectCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deflectCallCompleted(this, new deflectCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deflectCurrentCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("deflectCurrentCallReturn")]
        public AlcStatus deflectCurrentCall(string pFwSessionId, DeflectCurrentCallInvoke invoke) {
            object[] results = this.Invoke("deflectCurrentCall", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void deflectCurrentCallAsync(string pFwSessionId, DeflectCurrentCallInvoke invoke) {
            this.deflectCurrentCallAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void deflectCurrentCallAsync(string pFwSessionId, DeflectCurrentCallInvoke invoke, object userState) {
            if ((this.deflectCurrentCallOperationCompleted == null)) {
                this.deflectCurrentCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeflectCurrentCallOperationCompleted);
            }
            this.InvokeAsync("deflectCurrentCall", new object[] {
                        pFwSessionId,
                        invoke}, this.deflectCurrentCallOperationCompleted, userState);
        }
        
        private void OndeflectCurrentCallOperationCompleted(object arg) {
            if ((this.deflectCurrentCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deflectCurrentCallCompleted(this, new deflectCurrentCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("holdCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("holdCallReturn")]
        public AlcStatus holdCall(string pFwSessionId, HoldCallInvoke invoke) {
            object[] results = this.Invoke("holdCall", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void holdCallAsync(string pFwSessionId, HoldCallInvoke invoke) {
            this.holdCallAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void holdCallAsync(string pFwSessionId, HoldCallInvoke invoke, object userState) {
            if ((this.holdCallOperationCompleted == null)) {
                this.holdCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnholdCallOperationCompleted);
            }
            this.InvokeAsync("holdCall", new object[] {
                        pFwSessionId,
                        invoke}, this.holdCallOperationCompleted, userState);
        }
        
        private void OnholdCallOperationCompleted(object arg) {
            if ((this.holdCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.holdCallCompleted(this, new holdCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("holdCurrentCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("holdCurrentCallReturn")]
        public AlcStatus holdCurrentCall(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("holdCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void holdCurrentCallAsync(string pFwSessionId, string sessionId) {
            this.holdCurrentCallAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void holdCurrentCallAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.holdCurrentCallOperationCompleted == null)) {
                this.holdCurrentCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnholdCurrentCallOperationCompleted);
            }
            this.InvokeAsync("holdCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId}, this.holdCurrentCallOperationCompleted, userState);
        }
        
        private void OnholdCurrentCallOperationCompleted(object arg) {
            if ((this.holdCurrentCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.holdCurrentCallCompleted(this, new holdCurrentCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("clearCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("clearCallReturn")]
        public AlcStatus clearCall(string pFwSessionId, ClearCallInvoke invoke) {
            object[] results = this.Invoke("clearCall", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void clearCallAsync(string pFwSessionId, ClearCallInvoke invoke) {
            this.clearCallAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void clearCallAsync(string pFwSessionId, ClearCallInvoke invoke, object userState) {
            if ((this.clearCallOperationCompleted == null)) {
                this.clearCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearCallOperationCompleted);
            }
            this.InvokeAsync("clearCall", new object[] {
                        pFwSessionId,
                        invoke}, this.clearCallOperationCompleted, userState);
        }
        
        private void OnclearCallOperationCompleted(object arg) {
            if ((this.clearCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearCallCompleted(this, new clearCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("clearCurrentCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("clearCurrentCallReturn")]
        public AlcStatus clearCurrentCall(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("clearCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void clearCurrentCallAsync(string pFwSessionId, string sessionId) {
            this.clearCurrentCallAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void clearCurrentCallAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.clearCurrentCallOperationCompleted == null)) {
                this.clearCurrentCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnclearCurrentCallOperationCompleted);
            }
            this.InvokeAsync("clearCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId}, this.clearCurrentCallOperationCompleted, userState);
        }
        
        private void OnclearCurrentCallOperationCompleted(object arg) {
            if ((this.clearCurrentCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.clearCurrentCallCompleted(this, new clearCurrentCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("conferenceCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("conferenceCallReturn")]
        public AlcStatus conferenceCall(string pFwSessionId, ConferenceCallInvoke invoke) {
            object[] results = this.Invoke("conferenceCall", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void conferenceCallAsync(string pFwSessionId, ConferenceCallInvoke invoke) {
            this.conferenceCallAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void conferenceCallAsync(string pFwSessionId, ConferenceCallInvoke invoke, object userState) {
            if ((this.conferenceCallOperationCompleted == null)) {
                this.conferenceCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconferenceCallOperationCompleted);
            }
            this.InvokeAsync("conferenceCall", new object[] {
                        pFwSessionId,
                        invoke}, this.conferenceCallOperationCompleted, userState);
        }
        
        private void OnconferenceCallOperationCompleted(object arg) {
            if ((this.conferenceCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.conferenceCallCompleted(this, new conferenceCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("conferenceCurrentCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("conferenceCurrentCallReturn")]
        public AlcStatus conferenceCurrentCall(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("conferenceCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void conferenceCurrentCallAsync(string pFwSessionId, string sessionId) {
            this.conferenceCurrentCallAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void conferenceCurrentCallAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.conferenceCurrentCallOperationCompleted == null)) {
                this.conferenceCurrentCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconferenceCurrentCallOperationCompleted);
            }
            this.InvokeAsync("conferenceCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId}, this.conferenceCurrentCallOperationCompleted, userState);
        }
        
        private void OnconferenceCurrentCallOperationCompleted(object arg) {
            if ((this.conferenceCurrentCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.conferenceCurrentCallCompleted(this, new conferenceCurrentCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("cancelConference", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("cancelConferenceReturn")]
        public AlcStatus cancelConference(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("cancelConference", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void cancelConferenceAsync(string pFwSessionId, string sessionId) {
            this.cancelConferenceAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void cancelConferenceAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.cancelConferenceOperationCompleted == null)) {
                this.cancelConferenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelConferenceOperationCompleted);
            }
            this.InvokeAsync("cancelConference", new object[] {
                        pFwSessionId,
                        sessionId}, this.cancelConferenceOperationCompleted, userState);
        }
        
        private void OncancelConferenceOperationCompleted(object arg) {
            if ((this.cancelConferenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelConferenceCompleted(this, new cancelConferenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("transferCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("transferCallReturn")]
        public AlcStatus transferCall(string pFwSessionId, TransferCallInvoke invoke) {
            object[] results = this.Invoke("transferCall", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void transferCallAsync(string pFwSessionId, TransferCallInvoke invoke) {
            this.transferCallAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void transferCallAsync(string pFwSessionId, TransferCallInvoke invoke, object userState) {
            if ((this.transferCallOperationCompleted == null)) {
                this.transferCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransferCallOperationCompleted);
            }
            this.InvokeAsync("transferCall", new object[] {
                        pFwSessionId,
                        invoke}, this.transferCallOperationCompleted, userState);
        }
        
        private void OntransferCallOperationCompleted(object arg) {
            if ((this.transferCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transferCallCompleted(this, new transferCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("transferCurrentCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("transferCurrentCallReturn")]
        public AlcStatus transferCurrentCall(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("transferCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void transferCurrentCallAsync(string pFwSessionId, string sessionId) {
            this.transferCurrentCallAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void transferCurrentCallAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.transferCurrentCallOperationCompleted == null)) {
                this.transferCurrentCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OntransferCurrentCallOperationCompleted);
            }
            this.InvokeAsync("transferCurrentCall", new object[] {
                        pFwSessionId,
                        sessionId}, this.transferCurrentCallOperationCompleted, userState);
        }
        
        private void OntransferCurrentCallOperationCompleted(object arg) {
            if ((this.transferCurrentCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.transferCurrentCallCompleted(this, new transferCurrentCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("sendDTMF", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendDTMFReturn")]
        public AlcStatus sendDTMF(string pFwSessionId, SendDTMF invoke) {
            object[] results = this.Invoke("sendDTMF", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void sendDTMFAsync(string pFwSessionId, SendDTMF invoke) {
            this.sendDTMFAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void sendDTMFAsync(string pFwSessionId, SendDTMF invoke, object userState) {
            if ((this.sendDTMFOperationCompleted == null)) {
                this.sendDTMFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendDTMFOperationCompleted);
            }
            this.InvokeAsync("sendDTMF", new object[] {
                        pFwSessionId,
                        invoke}, this.sendDTMFOperationCompleted, userState);
        }
        
        private void OnsendDTMFOperationCompleted(object arg) {
            if ((this.sendDTMFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendDTMFCompleted(this, new sendDTMFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getCurrentCallInfo", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCurrentCallInfoReturn")]
        public CallInfoResult getCurrentCallInfo(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getCurrentCallInfo", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((CallInfoResult)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentCallInfoAsync(string pFwSessionId, string sessionId) {
            this.getCurrentCallInfoAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getCurrentCallInfoAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getCurrentCallInfoOperationCompleted == null)) {
                this.getCurrentCallInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentCallInfoOperationCompleted);
            }
            this.InvokeAsync("getCurrentCallInfo", new object[] {
                        pFwSessionId,
                        sessionId}, this.getCurrentCallInfoOperationCompleted, userState);
        }
        
        private void OngetCurrentCallInfoOperationCompleted(object arg) {
            if ((this.getCurrentCallInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentCallInfoCompleted(this, new getCurrentCallInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getCallState", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCallStateReturn")]
        public AlcCallState getCallState(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getCallState", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcCallState)(results[0]));
        }
        
        /// <remarks/>
        public void getCallStateAsync(string pFwSessionId, string sessionId) {
            this.getCallStateAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getCallStateAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getCallStateOperationCompleted == null)) {
                this.getCallStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCallStateOperationCompleted);
            }
            this.InvokeAsync("getCallState", new object[] {
                        pFwSessionId,
                        sessionId}, this.getCallStateOperationCompleted, userState);
        }
        
        private void OngetCallStateOperationCompleted(object arg) {
            if ((this.getCallStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCallStateCompleted(this, new getCallStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getCallRecordCapabilities", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCallRecordCapabilitiesReturn")]
        public AlcCallRecordCapabilities getCallRecordCapabilities(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getCallRecordCapabilities", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcCallRecordCapabilities)(results[0]));
        }
        
        /// <remarks/>
        public void getCallRecordCapabilitiesAsync(string pFwSessionId, string sessionId) {
            this.getCallRecordCapabilitiesAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getCallRecordCapabilitiesAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getCallRecordCapabilitiesOperationCompleted == null)) {
                this.getCallRecordCapabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCallRecordCapabilitiesOperationCompleted);
            }
            this.InvokeAsync("getCallRecordCapabilities", new object[] {
                        pFwSessionId,
                        sessionId}, this.getCallRecordCapabilitiesOperationCompleted, userState);
        }
        
        private void OngetCallRecordCapabilitiesOperationCompleted(object arg) {
            if ((this.getCallRecordCapabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCallRecordCapabilitiesCompleted(this, new getCallRecordCapabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("startRecord", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("startRecordReturn")]
        public AlcStatus startRecord(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("startRecord", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void startRecordAsync(string pFwSessionId, string sessionId) {
            this.startRecordAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void startRecordAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.startRecordOperationCompleted == null)) {
                this.startRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstartRecordOperationCompleted);
            }
            this.InvokeAsync("startRecord", new object[] {
                        pFwSessionId,
                        sessionId}, this.startRecordOperationCompleted, userState);
        }
        
        private void OnstartRecordOperationCompleted(object arg) {
            if ((this.startRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.startRecordCompleted(this, new startRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("stopRecord", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("stopRecordReturn")]
        public AlcStatus stopRecord(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("stopRecord", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void stopRecordAsync(string pFwSessionId, string sessionId) {
            this.stopRecordAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void stopRecordAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.stopRecordOperationCompleted == null)) {
                this.stopRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnstopRecordOperationCompleted);
            }
            this.InvokeAsync("stopRecord", new object[] {
                        pFwSessionId,
                        sessionId}, this.stopRecordOperationCompleted, userState);
        }
        
        private void OnstopRecordOperationCompleted(object arg) {
            if ((this.stopRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.stopRecordCompleted(this, new stopRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("pauseRecord", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("pauseRecordReturn")]
        public AlcStatus pauseRecord(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("pauseRecord", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void pauseRecordAsync(string pFwSessionId, string sessionId) {
            this.pauseRecordAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void pauseRecordAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.pauseRecordOperationCompleted == null)) {
                this.pauseRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnpauseRecordOperationCompleted);
            }
            this.InvokeAsync("pauseRecord", new object[] {
                        pFwSessionId,
                        sessionId}, this.pauseRecordOperationCompleted, userState);
        }
        
        private void OnpauseRecordOperationCompleted(object arg) {
            if ((this.pauseRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.pauseRecordCompleted(this, new pauseRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("continueRecord", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("continueRecordReturn")]
        public AlcStatus continueRecord(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("continueRecord", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void continueRecordAsync(string pFwSessionId, string sessionId) {
            this.continueRecordAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void continueRecordAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.continueRecordOperationCompleted == null)) {
                this.continueRecordOperationCompleted = new System.Threading.SendOrPostCallback(this.OncontinueRecordOperationCompleted);
            }
            this.InvokeAsync("continueRecord", new object[] {
                        pFwSessionId,
                        sessionId}, this.continueRecordOperationCompleted, userState);
        }
        
        private void OncontinueRecordOperationCompleted(object arg) {
            if ((this.continueRecordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.continueRecordCompleted(this, new continueRecordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getRecordState", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getRecordStateReturn")]
        public RecordStateResult getRecordState(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getRecordState", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((RecordStateResult)(results[0]));
        }
        
        /// <remarks/>
        public void getRecordStateAsync(string pFwSessionId, string sessionId) {
            this.getRecordStateAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getRecordStateAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getRecordStateOperationCompleted == null)) {
                this.getRecordStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRecordStateOperationCompleted);
            }
            this.InvokeAsync("getRecordState", new object[] {
                        pFwSessionId,
                        sessionId}, this.getRecordStateOperationCompleted, userState);
        }
        
        private void OngetRecordStateOperationCompleted(object arg) {
            if ((this.getRecordStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRecordStateCompleted(this, new getRecordStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getCallLogCapabilities", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCallLogCapabilitiesReturn")]
        public AlcCallLogCapabilities getCallLogCapabilities(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getCallLogCapabilities", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcCallLogCapabilities)(results[0]));
        }
        
        /// <remarks/>
        public void getCallLogCapabilitiesAsync(string pFwSessionId, string sessionId) {
            this.getCallLogCapabilitiesAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getCallLogCapabilitiesAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getCallLogCapabilitiesOperationCompleted == null)) {
                this.getCallLogCapabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCallLogCapabilitiesOperationCompleted);
            }
            this.InvokeAsync("getCallLogCapabilities", new object[] {
                        pFwSessionId,
                        sessionId}, this.getCallLogCapabilitiesOperationCompleted, userState);
        }
        
        private void OngetCallLogCapabilitiesOperationCompleted(object arg) {
            if ((this.getCallLogCapabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCallLogCapabilitiesCompleted(this, new getCallLogCapabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getCallLog", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCallLogReturn")]
        public CallLogResult getCallLog(string pFwSessionId, GetCallLogInvoke invoke) {
            object[] results = this.Invoke("getCallLog", new object[] {
                        pFwSessionId,
                        invoke});
            return ((CallLogResult)(results[0]));
        }
        
        /// <remarks/>
        public void getCallLogAsync(string pFwSessionId, GetCallLogInvoke invoke) {
            this.getCallLogAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void getCallLogAsync(string pFwSessionId, GetCallLogInvoke invoke, object userState) {
            if ((this.getCallLogOperationCompleted == null)) {
                this.getCallLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCallLogOperationCompleted);
            }
            this.InvokeAsync("getCallLog", new object[] {
                        pFwSessionId,
                        invoke}, this.getCallLogOperationCompleted, userState);
        }
        
        private void OngetCallLogOperationCompleted(object arg) {
            if ((this.getCallLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCallLogCompleted(this, new getCallLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getNbUnansweredCall", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getNbUnansweredCallReturn")]
        public NbUCallResult getNbUnansweredCall(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getNbUnansweredCall", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((NbUCallResult)(results[0]));
        }
        
        /// <remarks/>
        public void getNbUnansweredCallAsync(string pFwSessionId, string sessionId) {
            this.getNbUnansweredCallAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getNbUnansweredCallAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getNbUnansweredCallOperationCompleted == null)) {
                this.getNbUnansweredCallOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNbUnansweredCallOperationCompleted);
            }
            this.InvokeAsync("getNbUnansweredCall", new object[] {
                        pFwSessionId,
                        sessionId}, this.getNbUnansweredCallOperationCompleted, userState);
        }
        
        private void OngetNbUnansweredCallOperationCompleted(object arg) {
            if ((this.getNbUnansweredCallCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNbUnansweredCallCompleted(this, new getNbUnansweredCallCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("modifyCallLog", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("modifyCallLogReturn")]
        public AlcStatus modifyCallLog(string pFwSessionId, ModifyCallLog invoke) {
            object[] results = this.Invoke("modifyCallLog", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void modifyCallLogAsync(string pFwSessionId, ModifyCallLog invoke) {
            this.modifyCallLogAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void modifyCallLogAsync(string pFwSessionId, ModifyCallLog invoke, object userState) {
            if ((this.modifyCallLogOperationCompleted == null)) {
                this.modifyCallLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyCallLogOperationCompleted);
            }
            this.InvokeAsync("modifyCallLog", new object[] {
                        pFwSessionId,
                        invoke}, this.modifyCallLogOperationCompleted, userState);
        }
        
        private void OnmodifyCallLogOperationCompleted(object arg) {
            if ((this.modifyCallLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyCallLogCompleted(this, new modifyCallLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteCallLog", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteCallLogReturn")]
        public AlcStatus deleteCallLog(string pFwSessionId, DeleteCallLog invoke) {
            object[] results = this.Invoke("deleteCallLog", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void deleteCallLogAsync(string pFwSessionId, DeleteCallLog invoke) {
            this.deleteCallLogAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void deleteCallLogAsync(string pFwSessionId, DeleteCallLog invoke, object userState) {
            if ((this.deleteCallLogOperationCompleted == null)) {
                this.deleteCallLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteCallLogOperationCompleted);
            }
            this.InvokeAsync("deleteCallLog", new object[] {
                        pFwSessionId,
                        invoke}, this.deleteCallLogOperationCompleted, userState);
        }
        
        private void OndeleteCallLogOperationCompleted(object arg) {
            if ((this.deleteCallLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteCallLogCompleted(this, new deleteCallLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteAllCallLog", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteAllCallLogReturn")]
        public AlcStatus deleteAllCallLog(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("deleteAllCallLog", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void deleteAllCallLogAsync(string pFwSessionId, string sessionId) {
            this.deleteAllCallLogAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void deleteAllCallLogAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.deleteAllCallLogOperationCompleted == null)) {
                this.deleteAllCallLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteAllCallLogOperationCompleted);
            }
            this.InvokeAsync("deleteAllCallLog", new object[] {
                        pFwSessionId,
                        sessionId}, this.deleteAllCallLogOperationCompleted, userState);
        }
        
        private void OndeleteAllCallLogOperationCompleted(object arg) {
            if ((this.deleteAllCallLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteAllCallLogCompleted(this, new deleteAllCallLogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getRepertoryCapabilities", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getRepertoryCapabilitiesReturn")]
        public AlcRepertoryCapabilities getRepertoryCapabilities(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getRepertoryCapabilities", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AlcRepertoryCapabilities)(results[0]));
        }
        
        /// <remarks/>
        public void getRepertoryCapabilitiesAsync(string pFwSessionId, string sessionId) {
            this.getRepertoryCapabilitiesAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getRepertoryCapabilitiesAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getRepertoryCapabilitiesOperationCompleted == null)) {
                this.getRepertoryCapabilitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepertoryCapabilitiesOperationCompleted);
            }
            this.InvokeAsync("getRepertoryCapabilities", new object[] {
                        pFwSessionId,
                        sessionId}, this.getRepertoryCapabilitiesOperationCompleted, userState);
        }
        
        private void OngetRepertoryCapabilitiesOperationCompleted(object arg) {
            if ((this.getRepertoryCapabilitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepertoryCapabilitiesCompleted(this, new getRepertoryCapabilitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getRepertory", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getRepertoryReturn")]
        public RepertoryResult getRepertory(string pFwSessionId, GetRepertory invoke) {
            object[] results = this.Invoke("getRepertory", new object[] {
                        pFwSessionId,
                        invoke});
            return ((RepertoryResult)(results[0]));
        }
        
        /// <remarks/>
        public void getRepertoryAsync(string pFwSessionId, GetRepertory invoke) {
            this.getRepertoryAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void getRepertoryAsync(string pFwSessionId, GetRepertory invoke, object userState) {
            if ((this.getRepertoryOperationCompleted == null)) {
                this.getRepertoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetRepertoryOperationCompleted);
            }
            this.InvokeAsync("getRepertory", new object[] {
                        pFwSessionId,
                        invoke}, this.getRepertoryOperationCompleted, userState);
        }
        
        private void OngetRepertoryOperationCompleted(object arg) {
            if ((this.getRepertoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getRepertoryCompleted(this, new getRepertoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getAllRepertory", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllRepertoryReturn")]
        public AllRepertoryResult getAllRepertory(string pFwSessionId, string sessionId) {
            object[] results = this.Invoke("getAllRepertory", new object[] {
                        pFwSessionId,
                        sessionId});
            return ((AllRepertoryResult)(results[0]));
        }
        
        /// <remarks/>
        public void getAllRepertoryAsync(string pFwSessionId, string sessionId) {
            this.getAllRepertoryAsync(pFwSessionId, sessionId, null);
        }
        
        /// <remarks/>
        public void getAllRepertoryAsync(string pFwSessionId, string sessionId, object userState) {
            if ((this.getAllRepertoryOperationCompleted == null)) {
                this.getAllRepertoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllRepertoryOperationCompleted);
            }
            this.InvokeAsync("getAllRepertory", new object[] {
                        pFwSessionId,
                        sessionId}, this.getAllRepertoryOperationCompleted, userState);
        }
        
        private void OngetAllRepertoryOperationCompleted(object arg) {
            if ((this.getAllRepertoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllRepertoryCompleted(this, new getAllRepertoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createRepertory", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("createRepertoryReturn")]
        public CreateRepertoryResult createRepertory(string pFwSessionId, CreateOrModifyRepertory invoke) {
            object[] results = this.Invoke("createRepertory", new object[] {
                        pFwSessionId,
                        invoke});
            return ((CreateRepertoryResult)(results[0]));
        }
        
        /// <remarks/>
        public void createRepertoryAsync(string pFwSessionId, CreateOrModifyRepertory invoke) {
            this.createRepertoryAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void createRepertoryAsync(string pFwSessionId, CreateOrModifyRepertory invoke, object userState) {
            if ((this.createRepertoryOperationCompleted == null)) {
                this.createRepertoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateRepertoryOperationCompleted);
            }
            this.InvokeAsync("createRepertory", new object[] {
                        pFwSessionId,
                        invoke}, this.createRepertoryOperationCompleted, userState);
        }
        
        private void OncreateRepertoryOperationCompleted(object arg) {
            if ((this.createRepertoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createRepertoryCompleted(this, new createRepertoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("modifyRepertory", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("modifyRepertoryReturn")]
        public AlcStatus modifyRepertory(string pFwSessionId, CreateOrModifyRepertory invoke) {
            object[] results = this.Invoke("modifyRepertory", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void modifyRepertoryAsync(string pFwSessionId, CreateOrModifyRepertory invoke) {
            this.modifyRepertoryAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void modifyRepertoryAsync(string pFwSessionId, CreateOrModifyRepertory invoke, object userState) {
            if ((this.modifyRepertoryOperationCompleted == null)) {
                this.modifyRepertoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyRepertoryOperationCompleted);
            }
            this.InvokeAsync("modifyRepertory", new object[] {
                        pFwSessionId,
                        invoke}, this.modifyRepertoryOperationCompleted, userState);
        }
        
        private void OnmodifyRepertoryOperationCompleted(object arg) {
            if ((this.modifyRepertoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyRepertoryCompleted(this, new modifyRepertoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteRepertory", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteRepertoryReturn")]
        public AlcStatus deleteRepertory(string pFwSessionId, DeleteRepertoryOrFolder invoke) {
            object[] results = this.Invoke("deleteRepertory", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void deleteRepertoryAsync(string pFwSessionId, DeleteRepertoryOrFolder invoke) {
            this.deleteRepertoryAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void deleteRepertoryAsync(string pFwSessionId, DeleteRepertoryOrFolder invoke, object userState) {
            if ((this.deleteRepertoryOperationCompleted == null)) {
                this.deleteRepertoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteRepertoryOperationCompleted);
            }
            this.InvokeAsync("deleteRepertory", new object[] {
                        pFwSessionId,
                        invoke}, this.deleteRepertoryOperationCompleted, userState);
        }
        
        private void OndeleteRepertoryOperationCompleted(object arg) {
            if ((this.deleteRepertoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteRepertoryCompleted(this, new deleteRepertoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("moveRepertory", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("moveRepertoryReturn")]
        public AlcStatus moveRepertory(string pFwSessionId, MoveRepertoryOrFolder invoke) {
            object[] results = this.Invoke("moveRepertory", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void moveRepertoryAsync(string pFwSessionId, MoveRepertoryOrFolder invoke) {
            this.moveRepertoryAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void moveRepertoryAsync(string pFwSessionId, MoveRepertoryOrFolder invoke, object userState) {
            if ((this.moveRepertoryOperationCompleted == null)) {
                this.moveRepertoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveRepertoryOperationCompleted);
            }
            this.InvokeAsync("moveRepertory", new object[] {
                        pFwSessionId,
                        invoke}, this.moveRepertoryOperationCompleted, userState);
        }
        
        private void OnmoveRepertoryOperationCompleted(object arg) {
            if ((this.moveRepertoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveRepertoryCompleted(this, new moveRepertoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getFolder", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("getFolderReturn")]
        public FolderResult getFolder(string pFwSessionId, GetFolder invoke) {
            object[] results = this.Invoke("getFolder", new object[] {
                        pFwSessionId,
                        invoke});
            return ((FolderResult)(results[0]));
        }
        
        /// <remarks/>
        public void getFolderAsync(string pFwSessionId, GetFolder invoke) {
            this.getFolderAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void getFolderAsync(string pFwSessionId, GetFolder invoke, object userState) {
            if ((this.getFolderOperationCompleted == null)) {
                this.getFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFolderOperationCompleted);
            }
            this.InvokeAsync("getFolder", new object[] {
                        pFwSessionId,
                        invoke}, this.getFolderOperationCompleted, userState);
        }
        
        private void OngetFolderOperationCompleted(object arg) {
            if ((this.getFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getFolderCompleted(this, new getFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("createFolder", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("createFolderReturn")]
        public AlcStatus createFolder(string pFwSessionId, CreateFolder invoke) {
            object[] results = this.Invoke("createFolder", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void createFolderAsync(string pFwSessionId, CreateFolder invoke) {
            this.createFolderAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void createFolderAsync(string pFwSessionId, CreateFolder invoke, object userState) {
            if ((this.createFolderOperationCompleted == null)) {
                this.createFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateFolderOperationCompleted);
            }
            this.InvokeAsync("createFolder", new object[] {
                        pFwSessionId,
                        invoke}, this.createFolderOperationCompleted, userState);
        }
        
        private void OncreateFolderOperationCompleted(object arg) {
            if ((this.createFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createFolderCompleted(this, new createFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("modifyFolder", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("modifyFolderReturn")]
        public AlcStatus modifyFolder(string pFwSessionId, ModifyFolder invoke) {
            object[] results = this.Invoke("modifyFolder", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void modifyFolderAsync(string pFwSessionId, ModifyFolder invoke) {
            this.modifyFolderAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void modifyFolderAsync(string pFwSessionId, ModifyFolder invoke, object userState) {
            if ((this.modifyFolderOperationCompleted == null)) {
                this.modifyFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmodifyFolderOperationCompleted);
            }
            this.InvokeAsync("modifyFolder", new object[] {
                        pFwSessionId,
                        invoke}, this.modifyFolderOperationCompleted, userState);
        }
        
        private void OnmodifyFolderOperationCompleted(object arg) {
            if ((this.modifyFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.modifyFolderCompleted(this, new modifyFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("deleteFolder", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("deleteFolderReturn")]
        public AlcStatus deleteFolder(string pFwSessionId, DeleteRepertoryOrFolder invoke) {
            object[] results = this.Invoke("deleteFolder", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void deleteFolderAsync(string pFwSessionId, DeleteRepertoryOrFolder invoke) {
            this.deleteFolderAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void deleteFolderAsync(string pFwSessionId, DeleteRepertoryOrFolder invoke, object userState) {
            if ((this.deleteFolderOperationCompleted == null)) {
                this.deleteFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFolderOperationCompleted);
            }
            this.InvokeAsync("deleteFolder", new object[] {
                        pFwSessionId,
                        invoke}, this.deleteFolderOperationCompleted, userState);
        }
        
        private void OndeleteFolderOperationCompleted(object arg) {
            if ((this.deleteFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteFolderCompleted(this, new deleteFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("moveFolder", RequestNamespace="http://xmlapi.alcatel.com/phone", ResponseNamespace="http://xmlapi.alcatel.com/phone")]
        [return: System.Xml.Serialization.SoapElementAttribute("moveFolderReturn")]
        public AlcStatus moveFolder(string pFwSessionId, MoveRepertoryOrFolder invoke) {
            object[] results = this.Invoke("moveFolder", new object[] {
                        pFwSessionId,
                        invoke});
            return ((AlcStatus)(results[0]));
        }
        
        /// <remarks/>
        public void moveFolderAsync(string pFwSessionId, MoveRepertoryOrFolder invoke) {
            this.moveFolderAsync(pFwSessionId, invoke, null);
        }
        
        /// <remarks/>
        public void moveFolderAsync(string pFwSessionId, MoveRepertoryOrFolder invoke, object userState) {
            if ((this.moveFolderOperationCompleted == null)) {
                this.moveFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveFolderOperationCompleted);
            }
            this.InvokeAsync("moveFolder", new object[] {
                        pFwSessionId,
                        invoke}, this.moveFolderOperationCompleted, userState);
        }
        
        private void OnmoveFolderOperationCompleted(object arg) {
            if ((this.moveFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.moveFolderCompleted(this, new moveFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum AlcEventType {
        
        /// <remarks/>
        SESSION_CLOSED_EVENT,
        
        /// <remarks/>
        CALL_STATE_EVENT,
        
        /// <remarks/>
        NEW_SESSION_EVENT,
        
        /// <remarks/>
        CONNECTION_DOWN_EVENT,
        
        /// <remarks/>
        PHONE_SET_STATIC_STATE_EVENT,
        
        /// <remarks/>
        UNANSWERED_CALL_EVENT,
        
        /// <remarks/>
        NOMAD_STATE_EVENT,
        
        /// <remarks/>
        LINE_STATE_EVENT,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AlcLogonResult {
        
        private string firstNameField;
        
        private string lineNumberField;
        
        private string nameField;
        
        private bool registeredField;
        
        private string sessionIdField;
        
        private AlcStatus statusField;
        
        private string userNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string lineNumber {
            get {
                return this.lineNumberField;
            }
            set {
                this.lineNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public bool registered {
            get {
                return this.registeredField;
            }
            set {
                this.registeredField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string userName {
            get {
                return this.userNameField;
            }
            set {
                this.userNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AlcStatus {
        
        private int codeField;
        
        private string labelField;
        
        /// <remarks/>
        public int code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class FolderElt {
        
        private string folderNameField;
        
        private ItemId itemIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderName {
            get {
                return this.folderNameField;
            }
            set {
                this.folderNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId itemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class ItemId {
        
        private long diffIdField;
        
        private long timeIdField;
        
        /// <remarks/>
        public long diffId {
            get {
                return this.diffIdField;
            }
            set {
                this.diffIdField = value;
            }
        }
        
        /// <remarks/>
        public long timeId {
            get {
                return this.timeIdField;
            }
            set {
                this.timeIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class ModifyFolder {
        
        private FolderElt eltField;
        
        private ItemId fatherIdField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public FolderElt elt {
            get {
                return this.eltField;
            }
            set {
                this.eltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId fatherId {
            get {
                return this.fatherIdField;
            }
            set {
                this.fatherIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class CreateFolder {
        
        private ItemId fatherIdField;
        
        private string folderNameField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId fatherId {
            get {
                return this.fatherIdField;
            }
            set {
                this.fatherIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderName {
            get {
                return this.folderNameField;
            }
            set {
                this.folderNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class FolderNode {
        
        private string folderNameField;
        
        private ItemId itemIdField;
        
        private FolderNode[] subFoldersField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderName {
            get {
                return this.folderNameField;
            }
            set {
                this.folderNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId itemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public FolderNode[] subFolders {
            get {
                return this.subFoldersField;
            }
            set {
                this.subFoldersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class FolderResult {
        
        private FolderNode mainFolderField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public FolderNode mainFolder {
            get {
                return this.mainFolderField;
            }
            set {
                this.mainFolderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class GetFolder {
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class MoveRepertoryOrFolder {
        
        private ItemId fatherIdField;
        
        private string sessionIdField;
        
        private ItemId sonIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId fatherId {
            get {
                return this.fatherIdField;
            }
            set {
                this.fatherIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId sonId {
            get {
                return this.sonIdField;
            }
            set {
                this.sonIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class DeleteRepertoryOrFolder {
        
        private ItemId itemIdField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId itemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class CreateRepertoryResult {
        
        private ItemId itemIdField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId itemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class CreateOrModifyRepertory {
        
        private RepertoryElt eltField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RepertoryElt elt {
            get {
                return this.eltField;
            }
            set {
                this.eltField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class RepertoryElt {
        
        private string firstNameField;
        
        private ItemId itemIdField;
        
        private string nameField;
        
        private string numberField;
        
        private string translatedNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId itemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string translatedNumber {
            get {
                return this.translatedNumberField;
            }
            set {
                this.translatedNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class RepertoryNode {
        
        private RepertoryElt[] repertoryField;
        
        private RepertoryNode[] subRepertoriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RepertoryElt[] repertory {
            get {
                return this.repertoryField;
            }
            set {
                this.repertoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RepertoryNode[] subRepertories {
            get {
                return this.subRepertoriesField;
            }
            set {
                this.subRepertoriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AllRepertoryResult {
        
        private RepertoryNode repertoryNodeField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RepertoryNode repertoryNode {
            get {
                return this.repertoryNodeField;
            }
            set {
                this.repertoryNodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class Folder {
        
        private string folderNameField;
        
        private ItemId itemIdField;
        
        private RepertoryElt[] repertoryField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string folderName {
            get {
                return this.folderNameField;
            }
            set {
                this.folderNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId itemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RepertoryElt[] repertory {
            get {
                return this.repertoryField;
            }
            set {
                this.repertoryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class RepertoryResult {
        
        private Folder folderField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Folder folder {
            get {
                return this.folderField;
            }
            set {
                this.folderField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class GetRepertory {
        
        private ItemId folderIdField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId folderId {
            get {
                return this.folderIdField;
            }
            set {
                this.folderIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AlcRepertoryCapabilities {
        
        private bool createFolderField;
        
        private bool createRepertoryField;
        
        private bool deleteFolderField;
        
        private bool deleteRepertoryField;
        
        private bool getAllRepertoryField;
        
        private bool getFolderField;
        
        private bool getRepertoryField;
        
        private bool modifyFolderField;
        
        private bool modifyRepertoryField;
        
        private bool moveFolderField;
        
        private bool moveRepertoryField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        public bool createFolder {
            get {
                return this.createFolderField;
            }
            set {
                this.createFolderField = value;
            }
        }
        
        /// <remarks/>
        public bool createRepertory {
            get {
                return this.createRepertoryField;
            }
            set {
                this.createRepertoryField = value;
            }
        }
        
        /// <remarks/>
        public bool deleteFolder {
            get {
                return this.deleteFolderField;
            }
            set {
                this.deleteFolderField = value;
            }
        }
        
        /// <remarks/>
        public bool deleteRepertory {
            get {
                return this.deleteRepertoryField;
            }
            set {
                this.deleteRepertoryField = value;
            }
        }
        
        /// <remarks/>
        public bool getAllRepertory {
            get {
                return this.getAllRepertoryField;
            }
            set {
                this.getAllRepertoryField = value;
            }
        }
        
        /// <remarks/>
        public bool getFolder {
            get {
                return this.getFolderField;
            }
            set {
                this.getFolderField = value;
            }
        }
        
        /// <remarks/>
        public bool getRepertory {
            get {
                return this.getRepertoryField;
            }
            set {
                this.getRepertoryField = value;
            }
        }
        
        /// <remarks/>
        public bool modifyFolder {
            get {
                return this.modifyFolderField;
            }
            set {
                this.modifyFolderField = value;
            }
        }
        
        /// <remarks/>
        public bool modifyRepertory {
            get {
                return this.modifyRepertoryField;
            }
            set {
                this.modifyRepertoryField = value;
            }
        }
        
        /// <remarks/>
        public bool moveFolder {
            get {
                return this.moveFolderField;
            }
            set {
                this.moveFolderField = value;
            }
        }
        
        /// <remarks/>
        public bool moveRepertory {
            get {
                return this.moveRepertoryField;
            }
            set {
                this.moveRepertoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class DeleteCallLog {
        
        private ItemId[] contentField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId[] content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class ItemMod {
        
        private bool ackField;
        
        private ItemId idField;
        
        /// <remarks/>
        public bool ack {
            get {
                return this.ackField;
            }
            set {
                this.ackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class ModifyCallLog {
        
        private ItemMod[] contentField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemMod[] content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class NbUCallResult {
        
        private int nbUCallField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        public int nbUCall {
            get {
                return this.nbUCallField;
            }
            set {
                this.nbUCallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class TypedNumber {
        
        private string numberField;
        
        private System.Nullable<NumberType> typeField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<NumberType> type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum NumberType {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        boss,
        
        /// <remarks/>
        secretary,
        
        /// <remarks/>
        group,
        
        /// <remarks/>
        associate,
        
        /// <remarks/>
        voiceMail,
        
        /// <remarks/>
        voiceMailConsult,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class CallType {
        
        private bool answeredField;
        
        private bool externalField;
        
        private bool incomingField;
        
        private bool redirectedField;
        
        /// <remarks/>
        public bool answered {
            get {
                return this.answeredField;
            }
            set {
                this.answeredField = value;
            }
        }
        
        /// <remarks/>
        public bool external {
            get {
                return this.externalField;
            }
            set {
                this.externalField = value;
            }
        }
        
        /// <remarks/>
        public bool incoming {
            get {
                return this.incomingField;
            }
            set {
                this.incomingField = value;
            }
        }
        
        /// <remarks/>
        public bool redirected {
            get {
                return this.redirectedField;
            }
            set {
                this.redirectedField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class CallLogElt {
        
        private bool acknowledgedField;
        
        private CallType calltypeField;
        
        private System.Nullable<CallCause> causeField;
        
        private string corrFirstNameField;
        
        private string corrNameField;
        
        private TypedNumber corrNumberField;
        
        private System.Nullable<System.DateTime> dateOfBeginField;
        
        private System.Nullable<System.DateTime> dateOfConversField;
        
        private System.Nullable<System.DateTime> dateOfEndField;
        
        private string dirNumberField;
        
        private TypedNumber initialNumberField;
        
        private ItemId itemIdField;
        
        private string newDestNumberField;
        
        /// <remarks/>
        public bool acknowledged {
            get {
                return this.acknowledgedField;
            }
            set {
                this.acknowledgedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public CallType calltype {
            get {
                return this.calltypeField;
            }
            set {
                this.calltypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<CallCause> cause {
            get {
                return this.causeField;
            }
            set {
                this.causeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string corrFirstName {
            get {
                return this.corrFirstNameField;
            }
            set {
                this.corrFirstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string corrName {
            get {
                return this.corrNameField;
            }
            set {
                this.corrNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public TypedNumber corrNumber {
            get {
                return this.corrNumberField;
            }
            set {
                this.corrNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateOfBegin {
            get {
                return this.dateOfBeginField;
            }
            set {
                this.dateOfBeginField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateOfConvers {
            get {
                return this.dateOfConversField;
            }
            set {
                this.dateOfConversField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<System.DateTime> dateOfEnd {
            get {
                return this.dateOfEndField;
            }
            set {
                this.dateOfEndField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string dirNumber {
            get {
                return this.dirNumberField;
            }
            set {
                this.dirNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public TypedNumber initialNumber {
            get {
                return this.initialNumberField;
            }
            set {
                this.initialNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public ItemId itemId {
            get {
                return this.itemIdField;
            }
            set {
                this.itemIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string newDestNumber {
            get {
                return this.newDestNumberField;
            }
            set {
                this.newDestNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum CallCause {
        
        /// <remarks/>
        none,
        
        /// <remarks/>
        busy,
        
        /// <remarks/>
        destNotObtainable,
        
        /// <remarks/>
        dnd,
        
        /// <remarks/>
        maintenance,
        
        /// <remarks/>
        notAnswered,
        
        /// <remarks/>
        overflow,
        
        /// <remarks/>
        pickupIncoming,
        
        /// <remarks/>
        pickupOutgoing,
        
        /// <remarks/>
        pickupVictim,
        
        /// <remarks/>
        redirectedIncoming,
        
        /// <remarks/>
        redirectedOutgoing,
        
        /// <remarks/>
        redirectedTo,
        
        /// <remarks/>
        transfer,
        
        /// <remarks/>
        trunksBusy,
        
        /// <remarks/>
        blocked,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class CallLogResult {
        
        private CallLogElt[] contentField;
        
        private AlcStatus statusField;
        
        private int totalField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public CallLogElt[] content {
            get {
                return this.contentField;
            }
            set {
                this.contentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class CallLogSelector {
        
        private int filterActivatedField;
        
        private int indexField;
        
        private int nbItemsField;
        
        /// <remarks/>
        public int filterActivated {
            get {
                return this.filterActivatedField;
            }
            set {
                this.filterActivatedField = value;
            }
        }
        
        /// <remarks/>
        public int index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        public int nbItems {
            get {
                return this.nbItemsField;
            }
            set {
                this.nbItemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class GetCallLogInvoke {
        
        private CallLogSelector selectorField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public CallLogSelector selector {
            get {
                return this.selectorField;
            }
            set {
                this.selectorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AlcCallLogCapabilities {
        
        private bool deleteAllCallLogField;
        
        private bool deleteCallLogField;
        
        private bool getCallLogField;
        
        private bool getNbUnansweredCallField;
        
        private bool modifyCallLogField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        public bool deleteAllCallLog {
            get {
                return this.deleteAllCallLogField;
            }
            set {
                this.deleteAllCallLogField = value;
            }
        }
        
        /// <remarks/>
        public bool deleteCallLog {
            get {
                return this.deleteCallLogField;
            }
            set {
                this.deleteCallLogField = value;
            }
        }
        
        /// <remarks/>
        public bool getCallLog {
            get {
                return this.getCallLogField;
            }
            set {
                this.getCallLogField = value;
            }
        }
        
        /// <remarks/>
        public bool getNbUnansweredCall {
            get {
                return this.getNbUnansweredCallField;
            }
            set {
                this.getNbUnansweredCallField = value;
            }
        }
        
        /// <remarks/>
        public bool modifyCallLog {
            get {
                return this.modifyCallLogField;
            }
            set {
                this.modifyCallLogField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class RecordStateResult {
        
        private System.Nullable<RecordState> stateField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<RecordState> state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum RecordState {
        
        /// <remarks/>
        enable,
        
        /// <remarks/>
        disable,
        
        /// <remarks/>
        inProgress,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AlcCallRecordCapabilities {
        
        private bool continueRecordField;
        
        private bool getRecordStateField;
        
        private bool pauseRecordField;
        
        private bool startRecordField;
        
        private AlcStatus statusField;
        
        private bool stopRecordField;
        
        /// <remarks/>
        public bool continueRecord {
            get {
                return this.continueRecordField;
            }
            set {
                this.continueRecordField = value;
            }
        }
        
        /// <remarks/>
        public bool getRecordState {
            get {
                return this.getRecordStateField;
            }
            set {
                this.getRecordStateField = value;
            }
        }
        
        /// <remarks/>
        public bool pauseRecord {
            get {
                return this.pauseRecordField;
            }
            set {
                this.pauseRecordField = value;
            }
        }
        
        /// <remarks/>
        public bool startRecord {
            get {
                return this.startRecordField;
            }
            set {
                this.startRecordField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool stopRecord {
            get {
                return this.stopRecordField;
            }
            set {
                this.stopRecordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class Call {
        
        private long callRefField;
        
        private byte[] correlatorField;
        
        private string messageField;
        
        private System.Nullable<MessageType> msgtypeField;
        
        private string nameField;
        
        private string numberField;
        
        private System.Nullable<CallState> stateField;
        
        /// <remarks/>
        public long callRef {
            get {
                return this.callRefField;
            }
            set {
                this.callRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="hexBinary", IsNullable=true)]
        public byte[] correlator {
            get {
                return this.correlatorField;
            }
            set {
                this.correlatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<MessageType> msgtype {
            get {
                return this.msgtypeField;
            }
            set {
                this.msgtypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<CallState> state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum MessageType {
        
        /// <remarks/>
        apology,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum CallState {
        
        /// <remarks/>
        init,
        
        /// <remarks/>
        ringingIncoming,
        
        /// <remarks/>
        ringingOutgoing,
        
        /// <remarks/>
        active,
        
        /// <remarks/>
        held,
        
        /// <remarks/>
        conferenced,
        
        /// <remarks/>
        recording,
        
        /// <remarks/>
        waiting,
        
        /// <remarks/>
        dialing,
        
        /// <remarks/>
        releasing,
        
        /// <remarks/>
        unreacheable,
        
        /// <remarks/>
        busytone,
        
        /// <remarks/>
        opereserved,
        
        /// <remarks/>
        paging,
        
        /// <remarks/>
        unknown,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AlcCallState {
        
        private Call[] callsField;
        
        private AlcStatus statusField;
        
        private int totalField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public Call[] calls {
            get {
                return this.callsField;
            }
            set {
                this.callsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public int total {
            get {
                return this.totalField;
            }
            set {
                this.totalField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class CallInfoResult {
        
        private bool callIsPresentField;
        
        private bool callIsRedirectField;
        
        private string initialCalledNumberField;
        
        private string nameField;
        
        private string numberField;
        
        private System.Nullable<CallState> stateField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        public bool callIsPresent {
            get {
                return this.callIsPresentField;
            }
            set {
                this.callIsPresentField = value;
            }
        }
        
        /// <remarks/>
        public bool callIsRedirect {
            get {
                return this.callIsRedirectField;
            }
            set {
                this.callIsRedirectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string initialCalledNumber {
            get {
                return this.initialCalledNumberField;
            }
            set {
                this.initialCalledNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<CallState> state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class SendDTMF {
        
        private string numberField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string number {
            get {
                return this.numberField;
            }
            set {
                this.numberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class TransferCallInvoke {
        
        private long activeCallField;
        
        private long heldCallField;
        
        private string sessionIdField;
        
        /// <remarks/>
        public long activeCall {
            get {
                return this.activeCallField;
            }
            set {
                this.activeCallField = value;
            }
        }
        
        /// <remarks/>
        public long heldCall {
            get {
                return this.heldCallField;
            }
            set {
                this.heldCallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class ConferenceCallInvoke {
        
        private long activeCallField;
        
        private long heldCallField;
        
        private string sessionIdField;
        
        /// <remarks/>
        public long activeCall {
            get {
                return this.activeCallField;
            }
            set {
                this.activeCallField = value;
            }
        }
        
        /// <remarks/>
        public long heldCall {
            get {
                return this.heldCallField;
            }
            set {
                this.heldCallField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class ClearCallInvoke {
        
        private long callRefField;
        
        private string sessionIdField;
        
        /// <remarks/>
        public long callRef {
            get {
                return this.callRefField;
            }
            set {
                this.callRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class HoldCallInvoke {
        
        private long callRefField;
        
        private string sessionIdField;
        
        /// <remarks/>
        public long callRef {
            get {
                return this.callRefField;
            }
            set {
                this.callRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class DeflectCurrentCallInvoke {
        
        private string sessionIdField;
        
        private string targetPhoneNumberField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string targetPhoneNumber {
            get {
                return this.targetPhoneNumberField;
            }
            set {
                this.targetPhoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class DeflectCallInvoke {
        
        private long callRefField;
        
        private string sessionIdField;
        
        private string targetPhoneNumberField;
        
        /// <remarks/>
        public long callRef {
            get {
                return this.callRefField;
            }
            set {
                this.callRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string targetPhoneNumber {
            get {
                return this.targetPhoneNumberField;
            }
            set {
                this.targetPhoneNumberField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class TakeCallInvoke {
        
        private long callRefField;
        
        private string sessionIdField;
        
        /// <remarks/>
        public long callRef {
            get {
                return this.callRefField;
            }
            set {
                this.callRefField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class SendAssociateDataInvoke {
        
        private byte[] associateDataField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="hexBinary", IsNullable=true)]
        public byte[] associateData {
            get {
                return this.associateDataField;
            }
            set {
                this.associateDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class MakeCallInvoke {
        
        private byte[] associateDataField;
        
        private string businessCodeOrPINField;
        
        private string calleeField;
        
        private System.Nullable<CallMode> modeField;
        
        private string secretCodeField;
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(DataType="hexBinary", IsNullable=true)]
        public byte[] associateData {
            get {
                return this.associateDataField;
            }
            set {
                this.associateDataField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string businessCodeOrPIN {
            get {
                return this.businessCodeOrPINField;
            }
            set {
                this.businessCodeOrPINField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string callee {
            get {
                return this.calleeField;
            }
            set {
                this.calleeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<CallMode> mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string secretCode {
            get {
                return this.secretCodeField;
            }
            set {
                this.secretCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionId {
            get {
                return this.sessionIdField;
            }
            set {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum CallMode {
        
        /// <remarks/>
        normal,
        
        /// <remarks/>
        @private,
        
        /// <remarks/>
        business,
        
        /// <remarks/>
        correlator,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class LineStateResult {
        
        private System.Nullable<LineState> stateField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<LineState> state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum LineState {
        
        /// <remarks/>
        IN_SERVICE,
        
        /// <remarks/>
        OUT_OF_SERVICE,
        
        /// <remarks/>
        UNKNOWN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AlcTelephonyCapabilities {
        
        private bool clearCallField;
        
        private bool clearCurrentCallField;
        
        private bool conferenceCallField;
        
        private bool conferenceCurrentCallField;
        
        private bool deflectCallField;
        
        private bool deflectCurrentCallField;
        
        private bool getCallStateField;
        
        private bool getCurrentCallInfoField;
        
        private bool getLineStateField;
        
        private bool holdCallField;
        
        private bool holdCurrentCallField;
        
        private bool makeBusinessCallField;
        
        private bool makeCallField;
        
        private bool makeCorrelatorCallField;
        
        private bool makePrivateCallField;
        
        private bool sendAssociateDataField;
        
        private bool sendDTMFField;
        
        private AlcStatus statusField;
        
        private bool takeCallField;
        
        private bool takeCurrentCallField;
        
        private bool transferCallField;
        
        private bool transferCurrentCallField;
        
        /// <remarks/>
        public bool clearCall {
            get {
                return this.clearCallField;
            }
            set {
                this.clearCallField = value;
            }
        }
        
        /// <remarks/>
        public bool clearCurrentCall {
            get {
                return this.clearCurrentCallField;
            }
            set {
                this.clearCurrentCallField = value;
            }
        }
        
        /// <remarks/>
        public bool conferenceCall {
            get {
                return this.conferenceCallField;
            }
            set {
                this.conferenceCallField = value;
            }
        }
        
        /// <remarks/>
        public bool conferenceCurrentCall {
            get {
                return this.conferenceCurrentCallField;
            }
            set {
                this.conferenceCurrentCallField = value;
            }
        }
        
        /// <remarks/>
        public bool deflectCall {
            get {
                return this.deflectCallField;
            }
            set {
                this.deflectCallField = value;
            }
        }
        
        /// <remarks/>
        public bool deflectCurrentCall {
            get {
                return this.deflectCurrentCallField;
            }
            set {
                this.deflectCurrentCallField = value;
            }
        }
        
        /// <remarks/>
        public bool getCallState {
            get {
                return this.getCallStateField;
            }
            set {
                this.getCallStateField = value;
            }
        }
        
        /// <remarks/>
        public bool getCurrentCallInfo {
            get {
                return this.getCurrentCallInfoField;
            }
            set {
                this.getCurrentCallInfoField = value;
            }
        }
        
        /// <remarks/>
        public bool getLineState {
            get {
                return this.getLineStateField;
            }
            set {
                this.getLineStateField = value;
            }
        }
        
        /// <remarks/>
        public bool holdCall {
            get {
                return this.holdCallField;
            }
            set {
                this.holdCallField = value;
            }
        }
        
        /// <remarks/>
        public bool holdCurrentCall {
            get {
                return this.holdCurrentCallField;
            }
            set {
                this.holdCurrentCallField = value;
            }
        }
        
        /// <remarks/>
        public bool makeBusinessCall {
            get {
                return this.makeBusinessCallField;
            }
            set {
                this.makeBusinessCallField = value;
            }
        }
        
        /// <remarks/>
        public bool makeCall {
            get {
                return this.makeCallField;
            }
            set {
                this.makeCallField = value;
            }
        }
        
        /// <remarks/>
        public bool makeCorrelatorCall {
            get {
                return this.makeCorrelatorCallField;
            }
            set {
                this.makeCorrelatorCallField = value;
            }
        }
        
        /// <remarks/>
        public bool makePrivateCall {
            get {
                return this.makePrivateCallField;
            }
            set {
                this.makePrivateCallField = value;
            }
        }
        
        /// <remarks/>
        public bool sendAssociateData {
            get {
                return this.sendAssociateDataField;
            }
            set {
                this.sendAssociateDataField = value;
            }
        }
        
        /// <remarks/>
        public bool sendDTMF {
            get {
                return this.sendDTMFField;
            }
            set {
                this.sendDTMFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool takeCall {
            get {
                return this.takeCallField;
            }
            set {
                this.takeCallField = value;
            }
        }
        
        /// <remarks/>
        public bool takeCurrentCall {
            get {
                return this.takeCurrentCallField;
            }
            set {
                this.takeCurrentCallField = value;
            }
        }
        
        /// <remarks/>
        public bool transferCall {
            get {
                return this.transferCallField;
            }
            set {
                this.transferCallField = value;
            }
        }
        
        /// <remarks/>
        public bool transferCurrentCall {
            get {
                return this.transferCurrentCallField;
            }
            set {
                this.transferCurrentCallField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class NomadicStateResult {
        
        private string homeNumberField;
        
        private System.Nullable<NomadMode> stateField;
        
        private AlcStatus statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string homeNumber {
            get {
                return this.homeNumberField;
            }
            set {
                this.homeNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<NomadMode> state {
            get {
                return this.stateField;
            }
            set {
                this.stateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public enum NomadMode {
        
        /// <remarks/>
        local,
        
        /// <remarks/>
        privatePhone,
        
        /// <remarks/>
        voip,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/phone/types")]
    public partial class AlcPhoneCapabilities {
        
        private bool callLogField;
        
        private bool callRecordField;
        
        private bool eventsField;
        
        private bool nomadicField;
        
        private bool repertoryField;
        
        private AlcStatus statusField;
        
        private bool telephonyField;
        
        /// <remarks/>
        public bool callLog {
            get {
                return this.callLogField;
            }
            set {
                this.callLogField = value;
            }
        }
        
        /// <remarks/>
        public bool callRecord {
            get {
                return this.callRecordField;
            }
            set {
                this.callRecordField = value;
            }
        }
        
        /// <remarks/>
        public bool events {
            get {
                return this.eventsField;
            }
            set {
                this.eventsField = value;
            }
        }
        
        /// <remarks/>
        public bool nomadic {
            get {
                return this.nomadicField;
            }
            set {
                this.nomadicField = value;
            }
        }
        
        /// <remarks/>
        public bool repertory {
            get {
                return this.repertoryField;
            }
            set {
                this.repertoryField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public AlcStatus status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        public bool telephony {
            get {
                return this.telephonyField;
            }
            set {
                this.telephonyField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/common")]
    public enum AlcUserIdType {
        
        /// <remarks/>
        LOGIN_NAME,
        
        /// <remarks/>
        PHONE_NUMBER,
        
        /// <remarks/>
        EMAIL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcLogonResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcLogonResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void subscribeCompletedEventHandler(object sender, subscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class subscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal subscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void loginSupervisorCompletedEventHandler(object sender, loginSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcLogonResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcLogonResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getPhoneCapabilitiesCompletedEventHandler(object sender, getPhoneCapabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getPhoneCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getPhoneCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcPhoneCapabilities Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcPhoneCapabilities)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void unsubscribeCompletedEventHandler(object sender, unsubscribeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class unsubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal unsubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getNomadicStateCompletedEventHandler(object sender, getNomadicStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNomadicStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNomadicStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NomadicStateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NomadicStateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void nomadLoginCompletedEventHandler(object sender, nomadLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nomadLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nomadLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void nomadLogoutCompletedEventHandler(object sender, nomadLogoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class nomadLogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal nomadLogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getTelephonyCapabilitiesCompletedEventHandler(object sender, getTelephonyCapabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTelephonyCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTelephonyCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcTelephonyCapabilities Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcTelephonyCapabilities)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getLineStateCompletedEventHandler(object sender, getLineStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLineStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLineStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LineStateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LineStateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void makeCallCompletedEventHandler(object sender, makeCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class makeCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal makeCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendAssociateDataCompletedEventHandler(object sender, sendAssociateDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendAssociateDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendAssociateDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void takeCallCompletedEventHandler(object sender, takeCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class takeCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal takeCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void takeCurrentCallCompletedEventHandler(object sender, takeCurrentCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class takeCurrentCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal takeCurrentCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deflectCallCompletedEventHandler(object sender, deflectCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deflectCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deflectCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deflectCurrentCallCompletedEventHandler(object sender, deflectCurrentCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deflectCurrentCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deflectCurrentCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void holdCallCompletedEventHandler(object sender, holdCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class holdCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal holdCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void holdCurrentCallCompletedEventHandler(object sender, holdCurrentCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class holdCurrentCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal holdCurrentCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void clearCallCompletedEventHandler(object sender, clearCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clearCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void clearCurrentCallCompletedEventHandler(object sender, clearCurrentCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class clearCurrentCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal clearCurrentCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void conferenceCallCompletedEventHandler(object sender, conferenceCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class conferenceCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal conferenceCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void conferenceCurrentCallCompletedEventHandler(object sender, conferenceCurrentCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class conferenceCurrentCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal conferenceCurrentCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void cancelConferenceCompletedEventHandler(object sender, cancelConferenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelConferenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelConferenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void transferCallCompletedEventHandler(object sender, transferCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transferCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transferCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void transferCurrentCallCompletedEventHandler(object sender, transferCurrentCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class transferCurrentCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal transferCurrentCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendDTMFCompletedEventHandler(object sender, sendDTMFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendDTMFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendDTMFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCurrentCallInfoCompletedEventHandler(object sender, getCurrentCallInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentCallInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentCallInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallInfoResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallInfoResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCallStateCompletedEventHandler(object sender, getCallStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCallStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCallStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcCallState Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcCallState)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCallRecordCapabilitiesCompletedEventHandler(object sender, getCallRecordCapabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCallRecordCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCallRecordCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcCallRecordCapabilities Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcCallRecordCapabilities)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void startRecordCompletedEventHandler(object sender, startRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class startRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal startRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void stopRecordCompletedEventHandler(object sender, stopRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class stopRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal stopRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void pauseRecordCompletedEventHandler(object sender, pauseRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class pauseRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal pauseRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void continueRecordCompletedEventHandler(object sender, continueRecordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class continueRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal continueRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRecordStateCompletedEventHandler(object sender, getRecordStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRecordStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRecordStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecordStateResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecordStateResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCallLogCapabilitiesCompletedEventHandler(object sender, getCallLogCapabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCallLogCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCallLogCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcCallLogCapabilities Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcCallLogCapabilities)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCallLogCompletedEventHandler(object sender, getCallLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCallLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCallLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CallLogResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CallLogResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getNbUnansweredCallCompletedEventHandler(object sender, getNbUnansweredCallCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNbUnansweredCallCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNbUnansweredCallCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public NbUCallResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((NbUCallResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void modifyCallLogCompletedEventHandler(object sender, modifyCallLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyCallLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyCallLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteCallLogCompletedEventHandler(object sender, deleteCallLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteCallLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteCallLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteAllCallLogCompletedEventHandler(object sender, deleteAllCallLogCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteAllCallLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteAllCallLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRepertoryCapabilitiesCompletedEventHandler(object sender, getRepertoryCapabilitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepertoryCapabilitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepertoryCapabilitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcRepertoryCapabilities Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcRepertoryCapabilities)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getRepertoryCompletedEventHandler(object sender, getRepertoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getRepertoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getRepertoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RepertoryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RepertoryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllRepertoryCompletedEventHandler(object sender, getAllRepertoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllRepertoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllRepertoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AllRepertoryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AllRepertoryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createRepertoryCompletedEventHandler(object sender, createRepertoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createRepertoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createRepertoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public CreateRepertoryResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((CreateRepertoryResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void modifyRepertoryCompletedEventHandler(object sender, modifyRepertoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyRepertoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyRepertoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteRepertoryCompletedEventHandler(object sender, deleteRepertoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteRepertoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteRepertoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void moveRepertoryCompletedEventHandler(object sender, moveRepertoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveRepertoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveRepertoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getFolderCompletedEventHandler(object sender, getFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public FolderResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((FolderResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void createFolderCompletedEventHandler(object sender, createFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void modifyFolderCompletedEventHandler(object sender, modifyFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class modifyFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal modifyFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void deleteFolderCompletedEventHandler(object sender, deleteFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void moveFolderCompletedEventHandler(object sender, moveFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class moveFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal moveFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcStatus Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcStatus)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591