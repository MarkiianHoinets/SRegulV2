//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Ce code source a été automatiquement généré par Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SRegulV2.XMLApiFramework {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="XmlApiFrameworkSoapBinding", Namespace="http://xmlapi.alcatel.com/framework")]
    public partial class XmlApiFrameworkService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginSupervisorOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback restartSessionTimerOperationCompleted;
        
        private System.Threading.SendOrPostCallback setSessionTimerValueOperationCompleted;
        
        private System.Threading.SendOrPostCallback getUserInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public XmlApiFrameworkService() {
            this.Url = global::SRegulV2.Properties.Settings.Default.SRegulV2_XMLApiFramework_XmlApiFrameworkService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event loginSupervisorCompletedEventHandler loginSupervisorCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        public event restartSessionTimerCompletedEventHandler restartSessionTimerCompleted;
        
        /// <remarks/>
        public event setSessionTimerValueCompletedEventHandler setSessionTimerValueCompleted;
        
        /// <remarks/>
        public event getUserInfoCompletedEventHandler getUserInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("login", RequestNamespace="http://xmlapi.alcatel.com/framework", ResponseNamespace="http://xmlapi.alcatel.com/framework")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public string login(string pFwUser, string pFwPass) {
            object[] results = this.Invoke("login", new object[] {
                        pFwUser,
                        pFwPass});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string pFwUser, string pFwPass) {
            this.loginAsync(pFwUser, pFwPass, null);
        }
        
        /// <remarks/>
        public void loginAsync(string pFwUser, string pFwPass, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        pFwUser,
                        pFwPass}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("loginSupervisor", RequestNamespace="http://xmlapi.alcatel.com/framework", ResponseNamespace="http://xmlapi.alcatel.com/framework")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginSupervisorReturn")]
        public string loginSupervisor(string pSupervisorLoginName, string pSupervisorPassword, string pSupervisedAccountId, AlcUserIdType pSupervisedAccountIdType) {
            object[] results = this.Invoke("loginSupervisor", new object[] {
                        pSupervisorLoginName,
                        pSupervisorPassword,
                        pSupervisedAccountId,
                        pSupervisedAccountIdType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void loginSupervisorAsync(string pSupervisorLoginName, string pSupervisorPassword, string pSupervisedAccountId, AlcUserIdType pSupervisedAccountIdType) {
            this.loginSupervisorAsync(pSupervisorLoginName, pSupervisorPassword, pSupervisedAccountId, pSupervisedAccountIdType, null);
        }
        
        /// <remarks/>
        public void loginSupervisorAsync(string pSupervisorLoginName, string pSupervisorPassword, string pSupervisedAccountId, AlcUserIdType pSupervisedAccountIdType, object userState) {
            if ((this.loginSupervisorOperationCompleted == null)) {
                this.loginSupervisorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginSupervisorOperationCompleted);
            }
            this.InvokeAsync("loginSupervisor", new object[] {
                        pSupervisorLoginName,
                        pSupervisorPassword,
                        pSupervisedAccountId,
                        pSupervisedAccountIdType}, this.loginSupervisorOperationCompleted, userState);
        }
        
        private void OnloginSupervisorOperationCompleted(object arg) {
            if ((this.loginSupervisorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginSupervisorCompleted(this, new loginSupervisorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("logout", RequestNamespace="http://xmlapi.alcatel.com/framework", ResponseNamespace="http://xmlapi.alcatel.com/framework")]
        public void logout(string pFwSessionId) {
            this.Invoke("logout", new object[] {
                        pFwSessionId});
        }
        
        /// <remarks/>
        public void logoutAsync(string pFwSessionId) {
            this.logoutAsync(pFwSessionId, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string pFwSessionId, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        pFwSessionId}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("changePassword", RequestNamespace="http://xmlapi.alcatel.com/framework", ResponseNamespace="http://xmlapi.alcatel.com/framework")]
        public void changePassword(string pFwSessionId, string pOldPassword, string pNewPassword) {
            this.Invoke("changePassword", new object[] {
                        pFwSessionId,
                        pOldPassword,
                        pNewPassword});
        }
        
        /// <remarks/>
        public void changePasswordAsync(string pFwSessionId, string pOldPassword, string pNewPassword) {
            this.changePasswordAsync(pFwSessionId, pOldPassword, pNewPassword, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(string pFwSessionId, string pOldPassword, string pNewPassword, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        pFwSessionId,
                        pOldPassword,
                        pNewPassword}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("restartSessionTimer", RequestNamespace="http://xmlapi.alcatel.com/framework", ResponseNamespace="http://xmlapi.alcatel.com/framework")]
        public void restartSessionTimer(string pFwSessionId) {
            this.Invoke("restartSessionTimer", new object[] {
                        pFwSessionId});
        }
        
        /// <remarks/>
        public void restartSessionTimerAsync(string pFwSessionId) {
            this.restartSessionTimerAsync(pFwSessionId, null);
        }
        
        /// <remarks/>
        public void restartSessionTimerAsync(string pFwSessionId, object userState) {
            if ((this.restartSessionTimerOperationCompleted == null)) {
                this.restartSessionTimerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrestartSessionTimerOperationCompleted);
            }
            this.InvokeAsync("restartSessionTimer", new object[] {
                        pFwSessionId}, this.restartSessionTimerOperationCompleted, userState);
        }
        
        private void OnrestartSessionTimerOperationCompleted(object arg) {
            if ((this.restartSessionTimerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.restartSessionTimerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("setSessionTimerValue", RequestNamespace="http://xmlapi.alcatel.com/framework", ResponseNamespace="http://xmlapi.alcatel.com/framework")]
        public void setSessionTimerValue(string pFwSessionId, int pValue) {
            this.Invoke("setSessionTimerValue", new object[] {
                        pFwSessionId,
                        pValue});
        }
        
        /// <remarks/>
        public void setSessionTimerValueAsync(string pFwSessionId, int pValue) {
            this.setSessionTimerValueAsync(pFwSessionId, pValue, null);
        }
        
        /// <remarks/>
        public void setSessionTimerValueAsync(string pFwSessionId, int pValue, object userState) {
            if ((this.setSessionTimerValueOperationCompleted == null)) {
                this.setSessionTimerValueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetSessionTimerValueOperationCompleted);
            }
            this.InvokeAsync("setSessionTimerValue", new object[] {
                        pFwSessionId,
                        pValue}, this.setSessionTimerValueOperationCompleted, userState);
        }
        
        private void OnsetSessionTimerValueOperationCompleted(object arg) {
            if ((this.setSessionTimerValueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setSessionTimerValueCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("getUserInfo", RequestNamespace="http://xmlapi.alcatel.com/framework", ResponseNamespace="http://xmlapi.alcatel.com/framework")]
        [return: System.Xml.Serialization.SoapElementAttribute("getUserInfoReturn")]
        public AlcUserInfo getUserInfo(string pFwSessionId) {
            object[] results = this.Invoke("getUserInfo", new object[] {
                        pFwSessionId});
            return ((AlcUserInfo)(results[0]));
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string pFwSessionId) {
            this.getUserInfoAsync(pFwSessionId, null);
        }
        
        /// <remarks/>
        public void getUserInfoAsync(string pFwSessionId, object userState) {
            if ((this.getUserInfoOperationCompleted == null)) {
                this.getUserInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetUserInfoOperationCompleted);
            }
            this.InvokeAsync("getUserInfo", new object[] {
                        pFwSessionId}, this.getUserInfoOperationCompleted, userState);
        }
        
        private void OngetUserInfoOperationCompleted(object arg) {
            if ((this.getUserInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getUserInfoCompleted(this, new getUserInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/common")]
    public enum AlcUserIdType {
        
        /// <remarks/>
        LOGIN_NAME,
        
        /// <remarks/>
        PHONE_NUMBER,
        
        /// <remarks/>
        EMAIL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://xmlapi.alcatel.com/framework/types")]
    public partial class AlcUserInfo {
        
        private string companyDectField;
        
        private string companyPhoneField;
        
        private string emailField;
        
        private string firstNameField;
        
        private string languageField;
        
        private string loginNameField;
        
        private bool myAssistantAllowedField;
        
        private bool myManagementAllowedField;
        
        private bool myMessagingAllowedField;
        
        private bool myPhoneAllowedField;
        
        private bool myTeamworkAllowedField;
        
        private string nameField;
        
        private int timeToLiveField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string companyDect {
            get {
                return this.companyDectField;
            }
            set {
                this.companyDectField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string companyPhone {
            get {
                return this.companyPhoneField;
            }
            set {
                this.companyPhoneField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string email {
            get {
                return this.emailField;
            }
            set {
                this.emailField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string firstName {
            get {
                return this.firstNameField;
            }
            set {
                this.firstNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string loginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public bool myAssistantAllowed {
            get {
                return this.myAssistantAllowedField;
            }
            set {
                this.myAssistantAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool myManagementAllowed {
            get {
                return this.myManagementAllowedField;
            }
            set {
                this.myManagementAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool myMessagingAllowed {
            get {
                return this.myMessagingAllowedField;
            }
            set {
                this.myMessagingAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool myPhoneAllowed {
            get {
                return this.myPhoneAllowedField;
            }
            set {
                this.myPhoneAllowedField = value;
            }
        }
        
        /// <remarks/>
        public bool myTeamworkAllowed {
            get {
                return this.myTeamworkAllowedField;
            }
            set {
                this.myTeamworkAllowedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public int timeToLive {
            get {
                return this.timeToLiveField;
            }
            set {
                this.timeToLiveField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void loginSupervisorCompletedEventHandler(object sender, loginSupervisorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginSupervisorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginSupervisorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void logoutCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void changePasswordCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void restartSessionTimerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void setSessionTimerValueCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getUserInfoCompletedEventHandler(object sender, getUserInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AlcUserInfo Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AlcUserInfo)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591